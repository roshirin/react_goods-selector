{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","handleButtonClick","good","setState","createGoodsHeader","className","type","onClick","createGoodButton","isSelected","this","map","Date","getTime","Math","random","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oPAIaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CACZH,aAAcE,GAAQ,MAP5B,EAWEE,kBAAoB,SAACJ,GACnB,OAAOA,EAEH,qBAAIK,UAAU,sCAAd,oBACML,EADN,gBAGE,wBACE,UAAQ,cACRM,KAAK,SACLD,UAAU,cACVE,QAAS,kBAAM,EAAKN,0BAKxB,oBAAII,UAAU,sCAAd,gCA1BR,EAgCEG,iBAAmB,SAACC,EAAqBP,GACvC,OACE,wBACE,UAASO,EAAa,eAAiB,YACvCH,KAAK,SACLD,UAAWI,EAAa,iBAAmB,SAC3CF,QACEE,EACI,kBAAM,EAAKR,qBACX,kBAAM,EAAKA,kBAAkBC,IAPrC,SAUGO,EAAa,IAAM,OA5C5B,4CAiDE,WAAU,IAAD,OACCT,EAAiBU,KAAKX,MAAtBC,aAER,OACE,uBAAMK,UAAU,oBAAhB,UACGK,KAAKN,kBAAkBJ,GAExB,uBAAOK,UAAU,QAAjB,SACE,gCACGR,EAAMc,KAAI,SAAAT,GACT,IAAMO,EAAaP,IAASF,EAE5B,OACE,qBACE,UAAQ,OACRK,UAAWI,EAAa,+BAAiC,GAF3D,UAKE,6BACG,EAAKD,iBAAiBC,EAAYP,KAGrC,oBAAI,UAAQ,YAAYG,UAAU,eAAlC,SACGH,OAPG,IAAIU,MAAOC,UAAaC,KAAKC,wBAjErD,GAAyBC,IAAMC,WClB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.830ac4fb.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGood: string;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  handleButtonClick = (good?: string) => {\n    this.setState({\n      selectedGood: good || '',\n    });\n  };\n\n  createGoodsHeader = (selectedGood: string) => {\n    return selectedGood\n      ? (\n        <h1 className=\"title is-flex is-align-items-center\">\n          {`${selectedGood} is selected`}\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"ClearButton\"\n            type=\"button\"\n            className=\"delete ml-3\"\n            onClick={() => this.handleButtonClick()}\n          />\n        </h1>\n      )\n      : (\n        <h1 className=\"title is-flex is-align-items-center\">\n          No goods selected\n        </h1>\n      );\n  };\n\n  createGoodButton = (isSelected: boolean, good: string) => {\n    return (\n      <button\n        data-cy={isSelected ? 'RemoveButton' : 'AddButton'}\n        type=\"button\"\n        className={isSelected ? 'button is-info' : 'button'}\n        onClick={\n          isSelected\n            ? () => this.handleButtonClick()\n            : () => this.handleButtonClick(good)\n        }\n      >\n        {isSelected ? '-' : '+'}\n      </button>\n    );\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {this.createGoodsHeader(selectedGood)}\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => {\n              const isSelected = good === selectedGood;\n\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  className={isSelected ? 'has-background-success-light' : ''}\n                  key={(new Date().getTime()) * Math.random()}\n                >\n                  <td>\n                    {this.createGoodButton(isSelected, good)}\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}